{
    "openapi": "3.0.3",
    "info": {
        "title": "Test Order Manager",
        "description": "The Test-Order-Manager (TOM) is a software that plans the execution of different test\norders on a specified test bench within a given time period.\n\n<br>\n\n<img src=\"../static/Logo_neocx_RGB.png\" height=\"50\" alt=\"neocx logo\">\n\nDeveloped by [neocx GmbH](https://neocx.de/), Dresden, Germany.\n\nAll rights reserved (subject to any applicable written agreements).\n",
        "version": "1.13.3"
    },
    "servers": [
        {
            "url": "/test-order-manager"
        }
    ],
    "paths": {
        "/api/{slug}/testOrder": {
            "post": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Create Test Order Multi",
                "description": "Create a new empty Test Order without Testsuite.",
                "operationId": "create_test_order_multi",
                "parameters": [
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    },
                    {
                        "description": "Start date of the test.guide release",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Startdate",
                            "description": "Start date of the test.guide release"
                        },
                        "example": "2024-11-10T08:00+02:00",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "description": "Release date of the test.guide release",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Enddate",
                            "description": "Release date of the test.guide release"
                        },
                        "example": "2024-11-10T18:00+02:00",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "description": "Testbench name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testbenchname",
                            "description": "Testbench name"
                        },
                        "example": "A-10",
                        "name": "testbenchName",
                        "in": "query"
                    },
                    {
                        "description": "Name of the testorder",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Name",
                            "description": "Name of the testorder"
                        },
                        "example": "MyNewTestorder",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "description": "Path for the test order as list. It will be used as path for the test.guide release.",
                        "required": false,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "title": "Pathlist",
                            "description": "Path for the test order as list. It will be used as path for the test.guide release.",
                            "default": []
                        },
                        "example": [
                            "VR50",
                            "CL2",
                            "G21"
                        ],
                        "name": "pathList",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/TestOrderParameters"
                                    }
                                ],
                                "title": "Testorderparameters",
                                "description": "Set additional parameters like attributes to the Test Order. Get available attributes via settings/attributes.",
                                "default": {}
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "A new release was successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response 201 Create Test Order Multi Api  Slug  Testorder Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The release could not be created"
                    },
                    "401": {
                        "description": "Unauthorized. Wrong testGuideAuthKey or no permission to test.guide releases."
                    },
                    "409": {
                        "description": "The release could not be created - A release with this name already exists in this folder"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The release could not be created"
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/{slug}/testOrders/createFromFile": {
            "post": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Create Test Order From File Multi",
                "description": "Create a new test order based on a FEA file.\n\nA release is created in test.guide for this test order.\nThe FEA file is uploaded to the test.guide depository FeaForTestorders.",
                "operationId": "create_test_order_from_file_multi",
                "parameters": [
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "description": "Name of the testorder",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Name",
                            "description": "Name of the testorder"
                        },
                        "example": "MyNewTestorder",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "description": "Path for the test order as list. It will be used as path for the test.guide release.",
                        "required": false,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "title": "Pathlist",
                            "description": "Path for the test order as list. It will be used as path for the test.guide release.",
                            "default": []
                        },
                        "example": [
                            "VR50",
                            "CL2",
                            "G21"
                        ],
                        "name": "pathList",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_create_test_order_from_file_multi_api__slug__testOrders_createFromFile_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "A new release was successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response 201 Create Test Order From File Multi Api  Slug  Testorders Createfromfile Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The release could not be created"
                    },
                    "401": {
                        "description": "Unauthorized. Wrong testGuideAuthKey or no permission to test.guide releases."
                    },
                    "409": {
                        "description": "The release could not be created - A release with this name already exists in this folder"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The release could not be created"
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/{slug}/testOrders/importFromTestGuide": {
            "put": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Import From Test Guide Multi",
                "description": "Create a new test order by importing an existing test.guide release.\n\nThe release is updated to be a test order compatible release.\nIt is also possible to clone the existing test.guide release.\nPlease dont use for FEA test orders.",
                "operationId": "import_from_test_guide_multi",
                "parameters": [
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "description": "Name of the testorder",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Name",
                            "description": "Name of the testorder"
                        },
                        "example": "MyNewTestorder",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "description": "Path for the test order as list. It will be used as path for the test.guide release.",
                        "required": false,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "title": "Pathlist",
                            "description": "Path for the test order as list. It will be used as path for the test.guide release.",
                            "default": []
                        },
                        "example": [
                            "VR50",
                            "CL2",
                            "G21"
                        ],
                        "name": "pathList",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_import_from_test_guide_multi_api__slug__testOrders_importFromTestGuide_put"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "A new release was successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response 201 Import From Test Guide Multi Api  Slug  Testorders Importfromtestguide Put"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The release could not be created"
                    },
                    "401": {
                        "description": "Unauthorized. Wrong testGuideAuthKey or no permission to test.guide releases."
                    },
                    "409": {
                        "description": "The release could not be created - A release with this name already exists in this folder"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The release could not be created"
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/{slug}/testOrders/": {
            "get": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Get Test Orders Multi",
                "description": "Get all test orders.\n\nThe test orders can be filtered by testbench and state.",
                "operationId": "get_test_orders_multi",
                "parameters": [
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    },
                    {
                        "description": "Return only test orders of this testbench.",
                        "required": false,
                        "deprecated": true,
                        "schema": {
                            "type": "string",
                            "title": "Testbenchname",
                            "description": "Return only test orders of this testbench."
                        },
                        "example": "A10",
                        "name": "testbenchName",
                        "in": "query"
                    },
                    {
                        "description": "CREATED: current time/date is before startDate.\n\nACTIVE: current date/time is between startDate and endDate.\n\nDONE: current date/time is after endDate\n\nFINISHED: test.guide release is locked and results are exported.",
                        "required": false,
                        "deprecated": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CREATED",
                                "ACTIVE",
                                "DONE",
                                "FINISHED"
                            ],
                            "title": "State",
                            "description": "CREATED: current time/date is before startDate.\n\nACTIVE: current date/time is between startDate and endDate.\n\nDONE: current date/time is after endDate\n\nFINISHED: test.guide release is locked and results are exported."
                        },
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "description": "Filter string to search for Test Orders. This string will be used to search for Test Order path and name. Wildecards are supported",
                        "required": false,
                        "deprecated": true,
                        "schema": {
                            "type": "string",
                            "title": "Pathfilter",
                            "description": "Filter string to search for Test Orders. This string will be used to search for Test Order path and name. Wildecards are supported"
                        },
                        "example": "fi/l*t/er",
                        "name": "pathFilter",
                        "in": "query"
                    },
                    {
                        "description": "Return only test orders of this testbench[es].",
                        "required": false,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "title": "Testbenches",
                            "description": "Return only test orders of this testbench[es]."
                        },
                        "example": [
                            "A10",
                            "G42"
                        ],
                        "name": "testbenches",
                        "in": "query"
                    },
                    {
                        "description": "CREATED: current time/date is before startDate.\n\nACTIVE: current date/time is between startDate and endDate.\n\nDONE: current date/time is after endDate\n\nFINISHED: test.guide release is locked and results are exported.",
                        "required": false,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "title": "States",
                            "description": "CREATED: current time/date is before startDate.\n\nACTIVE: current date/time is between startDate and endDate.\n\nDONE: current date/time is after endDate\n\nFINISHED: test.guide release is locked and results are exported."
                        },
                        "example": [
                            "CREATED",
                            "ACTIVE",
                            "DONE",
                            "FINISHED"
                        ],
                        "name": "states",
                        "in": "query"
                    },
                    {
                        "description": "Filter string to search for Test Orders. This string will be used to search for Test Order path and name. Wildecards are supported",
                        "required": false,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "title": "Pathfilters",
                            "description": "Filter string to search for Test Orders. This string will be used to search for Test Order path and name. Wildecards are supported"
                        },
                        "example": [
                            "fi/l*t/er"
                        ],
                        "name": "pathFilters",
                        "in": "query"
                    },
                    {
                        "description": "Lower limit of the time filter.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Startdate",
                            "description": "Lower limit of the time filter."
                        },
                        "example": "2024-11-10T18:00+02:00",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "description": "Upper limit of the time filter.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Enddate",
                            "description": "Upper limit of the time filter."
                        },
                        "example": "2024-11-10T18:00+02:00",
                        "name": "endDate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available test orders.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/TestOrderInfo"
                                    },
                                    "type": "array",
                                    "title": "Response Get Test Orders Multi Api  Slug  Testorders  Get"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Wrong testGuideAuthKey or no permission to test.guide releases."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/{slug}/testOrders/{testOrderId}": {
            "get": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Get Test Order Multi",
                "description": "Get the test order with the given testOrderId",
                "operationId": "get_test_order_multi",
                "parameters": [
                    {
                        "description": "Unique id of the test order.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Testorderid",
                            "description": "Unique id of the test order."
                        },
                        "name": "testOrderId",
                        "in": "path"
                    },
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the relevant test order.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestOrder"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Wrong testGuideAuthKey or no permission to test.guide releases."
                    },
                    "404": {
                        "description": "Missing data for the test order."
                    },
                    "409": {
                        "description": "More than one test order for given ID found."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Delete Test Order Multi",
                "description": "Delete a given test order.\n\nThe corresponding test.guide release will be deleted too.\nIf there is a FEA file for this test order in the test.guide depository, it will be deleted too.",
                "operationId": "delete_test_order_multi",
                "parameters": [
                    {
                        "description": "Unique id of the test order.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Testorderid",
                            "description": "Unique id of the test order."
                        },
                        "name": "testOrderId",
                        "in": "path"
                    },
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Test order has been deleted.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "No test order for given ID found."
                    },
                    "409": {
                        "description": "Test order for the given ID is locked and cant deleted."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/{slug}/testOrders/{testOrderId}/finish": {
            "get": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Finish Test Order Multi",
                "description": "Finish the test order\n\nThe test.guise release for this test order will be locked. If the export of the ecu assembly is configured in the\nsettings, the consistency of the ecu configuration will be checked. If the ecu configutations are inconsistent,\na EcuConfigError will be thrown.\nThe test results will be exported to the alm system, which was used to define the testcases\nwithin this test order.",
                "operationId": "finish_test_order_multi",
                "parameters": [
                    {
                        "description": "Unique id of the test order.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Testorderid",
                            "description": "Unique id of the test order."
                        },
                        "name": "testOrderId",
                        "in": "path"
                    },
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Test order set as finished.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Wrong testGuideAuthKey or no permission to test.guide releases."
                    },
                    "404": {
                        "description": "No test order for given ID found."
                    },
                    "409": {
                        "description": "Conflicts in ecu configuration in test.guide results."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/{slug}/testOrders/{testOrderId}/download": {
            "get": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Download Test Order Multi",
                "description": "Download the file used to create this test order\n\nIf the current state is in CREATED, ACTIVE, DONE the file is unchanged.<br>\nIf the current state is FINISHED the file was updated with the test results.",
                "operationId": "download_test_order_multi",
                "parameters": [
                    {
                        "description": "Unique id of the test order.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Testorderid",
                            "description": "Unique id of the test order."
                        },
                        "name": "testOrderId",
                        "in": "path"
                    },
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Redirect URL to download corresponding FEA for given test order ID.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/zip": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                },
                                "example": "feaName.t42"
                            }
                        }
                    },
                    "400": {
                        "description": "Problem to resolve the URL to the test.guide artifact download."
                    },
                    "404": {
                        "description": "No artifact found for FEA test order."
                    },
                    "409": {
                        "description": "Conflicts in ecu configuration in test.guide results."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/{slug}/testOrders/{testOrderId}/attachments": {
            "get": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Get Attachments Multi",
                "description": "Get all attachments of the given test order",
                "operationId": "get_attachments_multi",
                "parameters": [
                    {
                        "description": "Unique id of the test order.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Testorderid",
                            "description": "Unique id of the test order."
                        },
                        "name": "testOrderId",
                        "in": "path"
                    },
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of attachments of selected test order.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ArtifactComponent"
                                    },
                                    "type": "array",
                                    "title": "Response Get Attachments Multi Api  Slug  Testorders  Testorderid  Attachments Get"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Wrong testGuideAuthKey or no permission to test.guide releases."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/{slug}/testOrders/{testOrderId}/attachment/{purpose}": {
            "post": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Upload Attachment Multi",
                "description": "Upload attachment to a test order with given purpose",
                "operationId": "upload_attachment_multi",
                "parameters": [
                    {
                        "description": "Unique id of the test order.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Testorderid",
                            "description": "Unique id of the test order."
                        },
                        "name": "testOrderId",
                        "in": "path"
                    },
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "description": "Purpose of the attachment",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Purpose",
                            "description": "Purpose of the attachment"
                        },
                        "name": "purpose",
                        "in": "path"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_attachment_multi_api__slug__testOrders__testOrderId__attachment__purpose__post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Attachment uploaded sucessfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtifactIdResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Wrong testGuideAuthKey or no permission to test.guide releases."
                    },
                    "409": {
                        "description": "Artifact with the same purpose already exists."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/{slug}/testOrders/{testOrderId}/attachment/download": {
            "get": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Download Attachment Multi",
                "description": "Download the attachment with given purpose or filename",
                "operationId": "download_attachment_multi",
                "parameters": [
                    {
                        "description": "Unique id of the test order.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Testorderid",
                            "description": "Unique id of the test order."
                        },
                        "name": "testOrderId",
                        "in": "path"
                    },
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    },
                    {
                        "description": "Filename of the artifact.",
                        "required": false,
                        "schema": {
                            "title": "Filename",
                            "description": "Filename of the artifact.",
                            "default": ""
                        },
                        "name": "filename",
                        "in": "query"
                    },
                    {
                        "description": "Purpose fo the artifact.",
                        "required": false,
                        "schema": {
                            "title": "Purpose",
                            "description": "Purpose fo the artifact.",
                            "default": ""
                        },
                        "name": "purpose",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Redirect URL to download corresponding FEA for given test order ID.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/zip": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                },
                                "example": "feaName.t42"
                            }
                        }
                    },
                    "400": {
                        "description": "Problem to resolve the URL to the test.guide artifact download."
                    },
                    "404": {
                        "description": "No artifact found for FEA test order."
                    },
                    "409": {
                        "description": "Conflicts in ecu configuration in test.guide results."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/{slug}/testOrders/{testOrderId}/attachment": {
            "delete": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Delete Attachment Multi",
                "description": "delete attachment by artifact_id",
                "operationId": "delete_attachment_multi",
                "parameters": [
                    {
                        "description": "Unique id of the test order.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Testorderid",
                            "description": "Unique id of the test order."
                        },
                        "name": "testOrderId",
                        "in": "path"
                    },
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    },
                    {
                        "description": "Filename of the artifact.",
                        "required": false,
                        "schema": {
                            "title": "Filename",
                            "description": "Filename of the artifact.",
                            "default": ""
                        },
                        "name": "filename",
                        "in": "query"
                    },
                    {
                        "description": "Purpose fo the artifact.",
                        "required": false,
                        "schema": {
                            "title": "Purpose",
                            "description": "Purpose fo the artifact.",
                            "default": ""
                        },
                        "name": "purpose",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artifact has been deleted.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "No artifact for given ID found."
                    },
                    "409": {
                        "description": "The corresponding test order is locked so that the artifact can't be deleted."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/testOrders/createFromFile": {
            "post": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Create Test Order From File",
                "description": "Create a new test order based on a FEA file.\n\nA release is created in test.guide for this test order.\nThe FEA file is uploaded to the test.guide depository FeaForTestorders.",
                "operationId": "create_test_order_from_file",
                "parameters": [
                    {
                        "description": "Name of the testorder",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Name",
                            "description": "Name of the testorder"
                        },
                        "example": "MyNewTestorder",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "description": "Path for the test order as list. It will be used as path for the test.guide release.",
                        "required": false,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "title": "Pathlist",
                            "description": "Path for the test order as list. It will be used as path for the test.guide release.",
                            "default": []
                        },
                        "example": [
                            "VR50",
                            "CL2",
                            "G21"
                        ],
                        "name": "pathList",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_create_test_order_from_file_api_testOrders_createFromFile_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "A new release was successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response 201 Create Test Order From File Api Testorders Createfromfile Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The release could not be created"
                    },
                    "401": {
                        "description": "Unauthorized. Wrong testGuideAuthKey or no permission to test.guide releases."
                    },
                    "409": {
                        "description": "The release could not be created - A release with this name already exists in this folder"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The release could not be created"
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/testOrders/importFromTestGuide": {
            "put": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Import From Test Guide",
                "description": "Create a new test order by importing an existing test.guide release.\n\nThe release is updated to be a test order compatible release.\nIt is also possible to clone the existing test.guide release.\nPlease dont use for FEA test orders.",
                "operationId": "import_from_test_guide",
                "parameters": [
                    {
                        "description": "Name of the testorder",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Name",
                            "description": "Name of the testorder"
                        },
                        "example": "MyNewTestorder",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "description": "Path for the test order as list. It will be used as path for the test.guide release.",
                        "required": false,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "title": "Pathlist",
                            "description": "Path for the test order as list. It will be used as path for the test.guide release.",
                            "default": []
                        },
                        "example": [
                            "VR50",
                            "CL2",
                            "G21"
                        ],
                        "name": "pathList",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_import_from_test_guide_api_testOrders_importFromTestGuide_put"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "A new release was successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response 201 Import From Test Guide Api Testorders Importfromtestguide Put"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The release could not be created"
                    },
                    "401": {
                        "description": "Unauthorized. Wrong testGuideAuthKey or no permission to test.guide releases."
                    },
                    "409": {
                        "description": "The release could not be created - A release with this name already exists in this folder"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The release could not be created"
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/testOrders/": {
            "get": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Get Test Orders",
                "description": "Get all test orders.\n\nThe test orders can be filtered by testbench and state.",
                "operationId": "get_test_orders",
                "parameters": [
                    {
                        "description": "Url of the test.guide instance",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideurl",
                            "description": "Url of the test.guide instance"
                        },
                        "name": "testGuideUrl",
                        "in": "query"
                    },
                    {
                        "description": "Id of the test.guide project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideprojectid",
                            "description": "Id of the test.guide project"
                        },
                        "name": "testGuideProjectId",
                        "in": "query"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    },
                    {
                        "description": "Return only test orders of this testbench.",
                        "required": false,
                        "deprecated": true,
                        "schema": {
                            "type": "string",
                            "title": "Testbenchname",
                            "description": "Return only test orders of this testbench."
                        },
                        "example": "A10",
                        "name": "testbenchName",
                        "in": "query"
                    },
                    {
                        "description": "CREATED: current time/date is before startDate.\n\nACTIVE: current date/time is between startDate and endDate.\n\nDONE: current date/time is after endDate\n\nFINISHED: test.guide release is locked and results are exported.",
                        "required": false,
                        "deprecated": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CREATED",
                                "ACTIVE",
                                "DONE",
                                "FINISHED"
                            ],
                            "title": "State",
                            "description": "CREATED: current time/date is before startDate.\n\nACTIVE: current date/time is between startDate and endDate.\n\nDONE: current date/time is after endDate\n\nFINISHED: test.guide release is locked and results are exported."
                        },
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "description": "Filter string to search for Test Orders. This string will be used to search for Test Order path and name. Wildecards are supported",
                        "required": false,
                        "deprecated": true,
                        "schema": {
                            "type": "string",
                            "title": "Pathfilter",
                            "description": "Filter string to search for Test Orders. This string will be used to search for Test Order path and name. Wildecards are supported"
                        },
                        "example": "fi/l*t/er",
                        "name": "pathFilter",
                        "in": "query"
                    },
                    {
                        "description": "Return only test orders of this testbench[es].",
                        "required": false,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "title": "Testbenches",
                            "description": "Return only test orders of this testbench[es]."
                        },
                        "example": [
                            "A10",
                            "G42"
                        ],
                        "name": "testbenches",
                        "in": "query"
                    },
                    {
                        "description": "CREATED: current time/date is before startDate.\n\nACTIVE: current date/time is between startDate and endDate.\n\nDONE: current date/time is after endDate\n\nFINISHED: test.guide release is locked and results are exported.",
                        "required": false,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "title": "States",
                            "description": "CREATED: current time/date is before startDate.\n\nACTIVE: current date/time is between startDate and endDate.\n\nDONE: current date/time is after endDate\n\nFINISHED: test.guide release is locked and results are exported."
                        },
                        "example": [
                            "CREATED",
                            "ACTIVE",
                            "DONE",
                            "FINISHED"
                        ],
                        "name": "states",
                        "in": "query"
                    },
                    {
                        "description": "Filter string to search for Test Orders. This string will be used to search for Test Order path and name. Wildecards are supported",
                        "required": false,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "title": "Pathfilters",
                            "description": "Filter string to search for Test Orders. This string will be used to search for Test Order path and name. Wildecards are supported"
                        },
                        "example": [
                            "fi/l*t/er"
                        ],
                        "name": "pathFilters",
                        "in": "query"
                    },
                    {
                        "description": "Lower limit of the time filter.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Startdate",
                            "description": "Lower limit of the time filter."
                        },
                        "example": "2024-11-10T18:00+02:00",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "description": "Upper limit of the time filter.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Enddate",
                            "description": "Upper limit of the time filter."
                        },
                        "example": "2024-11-10T18:00+02:00",
                        "name": "endDate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available test orders.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/TestOrderInfo"
                                    },
                                    "type": "array",
                                    "title": "Response Get Test Orders Api Testorders  Get"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Wrong testGuideAuthKey or no permission to test.guide releases."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/testOrders/{testOrderId}": {
            "get": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Get Test Order",
                "description": "Get the test order with the given testOrderId",
                "operationId": "get_test_order",
                "parameters": [
                    {
                        "description": "Unique id of the test order.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Testorderid",
                            "description": "Unique id of the test order."
                        },
                        "name": "testOrderId",
                        "in": "path"
                    },
                    {
                        "description": "Url of the test.guide instance",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideurl",
                            "description": "Url of the test.guide instance"
                        },
                        "name": "testGuideUrl",
                        "in": "query"
                    },
                    {
                        "description": "Id of the test.guide project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideprojectid",
                            "description": "Id of the test.guide project"
                        },
                        "name": "testGuideProjectId",
                        "in": "query"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the relevant test order.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestOrder"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Wrong testGuideAuthKey or no permission to test.guide releases."
                    },
                    "404": {
                        "description": "Missing data for the test order."
                    },
                    "409": {
                        "description": "More than one test order for given ID found."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Delete Test Order",
                "description": "Delete a given test order.\n\nThe corresponding test.guide release will be deleted too.\nIf there is a FEA file for this test order in the test.guide depository, it will be deleted too.",
                "operationId": "delete_test_order",
                "parameters": [
                    {
                        "description": "Unique id of the test order.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Testorderid",
                            "description": "Unique id of the test order."
                        },
                        "name": "testOrderId",
                        "in": "path"
                    },
                    {
                        "description": "Url of the test.guide instance",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideurl",
                            "description": "Url of the test.guide instance"
                        },
                        "name": "testGuideUrl",
                        "in": "query"
                    },
                    {
                        "description": "Id of the test.guide project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideprojectid",
                            "description": "Id of the test.guide project"
                        },
                        "name": "testGuideProjectId",
                        "in": "query"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Test order has been deleted.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "No test order for given ID found."
                    },
                    "409": {
                        "description": "Test order for the given ID is locked and cant deleted."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/testOrders/{testOrderId}/finish": {
            "get": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Finish Test Order",
                "description": "Finish the test order\n\nThe test.guise release for this test order will be locked. If the export of the ecu assembly is configured in the\nsettings, the consistency of the ecu configuration will be checked. If the ecu configutations are inconsistent,\na EcuConfigError will be thrown.\nThe test results will be exported to the alm system, which was used to define the testcases\nwithin this test order.",
                "operationId": "finish_test_order",
                "parameters": [
                    {
                        "description": "Unique id of the test order.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Testorderid",
                            "description": "Unique id of the test order."
                        },
                        "name": "testOrderId",
                        "in": "path"
                    },
                    {
                        "description": "Url of the test.guide instance",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideurl",
                            "description": "Url of the test.guide instance"
                        },
                        "name": "testGuideUrl",
                        "in": "query"
                    },
                    {
                        "description": "Id of the test.guide project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideprojectid",
                            "description": "Id of the test.guide project"
                        },
                        "name": "testGuideProjectId",
                        "in": "query"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Test order set as finished.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Wrong testGuideAuthKey or no permission to test.guide releases."
                    },
                    "404": {
                        "description": "No test order for given ID found."
                    },
                    "409": {
                        "description": "Conflicts in ecu configuration in test.guide results."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/testOrders/{testOrderId}/download": {
            "get": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Download Test Order",
                "description": "Download the file used to create this test order\n\nIf the current state is in CREATED, ACTIVE, DONE the file is unchanged.<br>\nIf the current state is FINISHED the file was updated with the test results.",
                "operationId": "download_test_order",
                "parameters": [
                    {
                        "description": "Unique id of the test order.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Testorderid",
                            "description": "Unique id of the test order."
                        },
                        "name": "testOrderId",
                        "in": "path"
                    },
                    {
                        "description": "Url of the test.guide instance",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideurl",
                            "description": "Url of the test.guide instance"
                        },
                        "name": "testGuideUrl",
                        "in": "query"
                    },
                    {
                        "description": "Id of the test.guide project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideprojectid",
                            "description": "Id of the test.guide project"
                        },
                        "name": "testGuideProjectId",
                        "in": "query"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Redirect URL to download corresponding FEA for given test order ID.",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                },
                                "example": "feaName.t42"
                            }
                        }
                    },
                    "400": {
                        "description": "Problem to resolve the URL to the test.guide artifact download."
                    },
                    "404": {
                        "description": "No artifact found for FEA test order."
                    },
                    "409": {
                        "description": "Conflicts in ecu configuration in test.guide results."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/testOrders/{testOrderId}/attachments": {
            "get": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Get Attachments",
                "description": "Get all attachments of the given test order",
                "operationId": "get_attachments",
                "parameters": [
                    {
                        "description": "Unique id of the test order.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Testorderid",
                            "description": "Unique id of the test order."
                        },
                        "name": "testOrderId",
                        "in": "path"
                    },
                    {
                        "description": "Url of the test.guide instance",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideurl",
                            "description": "Url of the test.guide instance"
                        },
                        "name": "testGuideUrl",
                        "in": "query"
                    },
                    {
                        "description": "Id of the test.guide project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideprojectid",
                            "description": "Id of the test.guide project"
                        },
                        "name": "testGuideProjectId",
                        "in": "query"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of attachments of selected test order.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ArtifactComponent"
                                    },
                                    "type": "array",
                                    "title": "Response Get Attachments Api Testorders  Testorderid  Attachments Get"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Wrong testGuideAuthKey or no permission to test.guide releases."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/testOrders/{testOrderId}/attachment/{purpose}": {
            "post": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Upload Attachment",
                "description": "Upload attachment to a test order with given purpose",
                "operationId": "upload_attachment",
                "parameters": [
                    {
                        "description": "Unique id of the test order.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Testorderid",
                            "description": "Unique id of the test order."
                        },
                        "name": "testOrderId",
                        "in": "path"
                    },
                    {
                        "description": "Purpose of the attachment",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Purpose",
                            "description": "Purpose of the attachment"
                        },
                        "name": "purpose",
                        "in": "path"
                    },
                    {
                        "description": "Url of the test.guide instance",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideurl",
                            "description": "Url of the test.guide instance"
                        },
                        "name": "testGuideUrl",
                        "in": "query"
                    },
                    {
                        "description": "Id of the test.guide project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideprojectid",
                            "description": "Id of the test.guide project"
                        },
                        "name": "testGuideProjectId",
                        "in": "query"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_attachment_api_testOrders__testOrderId__attachment__purpose__post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Attachment uploaded sucessfully.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Wrong testGuideAuthKey or no permission to test.guide releases."
                    },
                    "409": {
                        "description": "Artifact with the same purpose already exists."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/testOrders/{testOrderId}/attachment/download": {
            "get": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Download Attachment",
                "description": "Download the attachment with given purpose or filename",
                "operationId": "download_attachment",
                "parameters": [
                    {
                        "description": "Unique id of the test order.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Testorderid",
                            "description": "Unique id of the test order."
                        },
                        "name": "testOrderId",
                        "in": "path"
                    },
                    {
                        "description": "Url of the test.guide instance",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideurl",
                            "description": "Url of the test.guide instance"
                        },
                        "name": "testGuideUrl",
                        "in": "query"
                    },
                    {
                        "description": "Id of the test.guide project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideprojectid",
                            "description": "Id of the test.guide project"
                        },
                        "name": "testGuideProjectId",
                        "in": "query"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    },
                    {
                        "description": "Filename of the artifact.",
                        "required": false,
                        "schema": {
                            "title": "Filename",
                            "description": "Filename of the artifact.",
                            "default": ""
                        },
                        "name": "filename",
                        "in": "query"
                    },
                    {
                        "description": "Purpose fo the artifact.",
                        "required": false,
                        "schema": {
                            "title": "Purpose",
                            "description": "Purpose fo the artifact.",
                            "default": ""
                        },
                        "name": "purpose",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Redirect URL to download corresponding FEA for given test order ID.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/zip": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                },
                                "example": "feaName.t42"
                            }
                        }
                    },
                    "400": {
                        "description": "Problem to resolve the URL to the test.guide artifact download."
                    },
                    "404": {
                        "description": "No artifact found for FEA test order."
                    },
                    "409": {
                        "description": "Conflicts in ecu configuration in test.guide results."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/testOrders/{testOrderId}/attachment": {
            "delete": {
                "tags": [
                    "testOrders"
                ],
                "summary": "Delete Attachment",
                "description": "delete attachment by artifact_id",
                "operationId": "delete_attachment",
                "parameters": [
                    {
                        "description": "Unique id of the test order.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Testorderid",
                            "description": "Unique id of the test order."
                        },
                        "name": "testOrderId",
                        "in": "path"
                    },
                    {
                        "description": "Url of the test.guide instance",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideurl",
                            "description": "Url of the test.guide instance"
                        },
                        "name": "testGuideUrl",
                        "in": "query"
                    },
                    {
                        "description": "Id of the test.guide project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideprojectid",
                            "description": "Id of the test.guide project"
                        },
                        "name": "testGuideProjectId",
                        "in": "query"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    },
                    {
                        "description": "Filename of the artifact.",
                        "required": false,
                        "schema": {
                            "title": "Filename",
                            "description": "Filename of the artifact.",
                            "default": ""
                        },
                        "name": "filename",
                        "in": "query"
                    },
                    {
                        "description": "Purpose fo the artifact.",
                        "required": false,
                        "schema": {
                            "title": "Purpose",
                            "description": "Purpose fo the artifact.",
                            "default": ""
                        },
                        "name": "purpose",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artifact has been deleted.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "No artifact for given ID found."
                    },
                    "409": {
                        "description": "The corresponding test order is locked so that the artifact can't be deleted."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/{slug}/testOrders/{testOrderId}/testSuite/fea": {
            "post": {
                "tags": [
                    "testSuite"
                ],
                "summary": "Add Test Suite From File Multi",
                "description": "Adds a Test Suite based on a FEA file to an existing Test Order",
                "operationId": "add_test_suite_from_file_multi",
                "parameters": [
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "description": "Unique id of the test order.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Testorderid",
                            "description": "Unique id of the test order."
                        },
                        "name": "testOrderId",
                        "in": "path"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_add_test_suite_from_file_multi_api__slug__testOrders__testOrderId__testSuite_fea_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "A new Test Suite was appended to a Test Order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response 201 Add Test Suite From File Multi Api  Slug  Testorders  Testorderid  Testsuite Fea Post"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Wrong testGuideAuthKey or no permission to test.guide releases."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The release could not be created"
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/{slug}/testOrders/{testOrderId}/testSuite/codebeamer/testset": {
            "post": {
                "tags": [
                    "testSuite"
                ],
                "summary": "Add Test Suite From Testset Multi",
                "description": "Adds a Test Suite based on a Codebeamer Testsuite to an existing Test Order",
                "operationId": "add_test_suite_from_testset_multi",
                "parameters": [
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "description": "Unique id of the test order.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Testorderid",
                            "description": "Unique id of the test order."
                        },
                        "name": "testOrderId",
                        "in": "path"
                    },
                    {
                        "description": "Unique id of the testset in codebeamer.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Testsetid",
                            "description": "Unique id of the testset in codebeamer."
                        },
                        "name": "testSetId",
                        "in": "query"
                    },
                    {
                        "description": "Optional Codebeamer Baseline id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Baselineid",
                            "description": "Optional Codebeamer Baseline id"
                        },
                        "name": "baselineId",
                        "in": "query"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A new Test Suite was appended to a Test Order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response 201 Add Test Suite From Testset Multi Api  Slug  Testorders  Testorderid  Testsuite Codebeamer Testset Post"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Wrong testGuideAuthKey or no permission to test.guide releases."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The release could not be created"
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/{slug}/testOrders/{testOrderId}/testSuite/codebeamer/cbql": {
            "post": {
                "tags": [
                    "testSuite"
                ],
                "summary": "Add Test Suite From Cbql Multi",
                "operationId": "add_test_suite_from_cbql_multi",
                "parameters": [
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "description": "Unique id of the test order.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Testorderid",
                            "description": "Unique id of the test order."
                        },
                        "name": "testOrderId",
                        "in": "path"
                    },
                    {
                        "description": "Optional Codebeamer Project id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Projectid",
                            "description": "Optional Codebeamer Project id"
                        },
                        "name": "projectId",
                        "in": "query"
                    },
                    {
                        "description": "Optional Codebeamer Testcases Tracker id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Trackerid",
                            "description": "Optional Codebeamer Testcases Tracker id"
                        },
                        "name": "trackerId",
                        "in": "query"
                    },
                    {
                        "description": "Optional Codebeamer Baseline id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Baselineid",
                            "description": "Optional Codebeamer Baseline id"
                        },
                        "name": "baselineId",
                        "in": "query"
                    },
                    {
                        "description": "User cbQL query string",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Cbql",
                            "description": "User cbQL query string"
                        },
                        "name": "cbql",
                        "in": "query"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "A new Test Suite was appended to a Test Order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response 201 Add Test Suite From Cbql Multi Api  Slug  Testorders  Testorderid  Testsuite Codebeamer Cbql Post"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Wrong testGuideAuthKey or no permission to test.guide releases."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The release could not be created"
                    },
                    "503": {
                        "description": "test.guide is not available"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/{slug}/testguide/listFolder": {
            "get": {
                "tags": [
                    "testguide"
                ],
                "summary": "Get Folder Content Multi",
                "operationId": "get_folder_content_multi",
                "parameters": [
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    },
                    {
                        "description": "Path to the folder which should be analyzed.",
                        "required": false,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "title": "Folders",
                            "description": "Path to the folder which should be analyzed."
                        },
                        "example": [
                            "folder1",
                            "folder1_2"
                        ],
                        "name": "folders",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Folder content has been detected succesfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FolderContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Slug not configured or folder to list not found."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/testguide/": {
            "get": {
                "tags": [
                    "testguide"
                ],
                "summary": "Get Testguide Instances",
                "description": "Get all test.guide instances.",
                "operationId": "get_testguide_instances",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Response Get Testguide Instances Api Testguide  Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/testguide/projects": {
            "get": {
                "tags": [
                    "testguide"
                ],
                "summary": "Get Testguide Projects",
                "description": "Get all projects of a test.guide instance, for which the user has permission.",
                "operationId": "get_testguide_projects",
                "parameters": [
                    {
                        "description": "URL of a test.guide instance",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideurl",
                            "description": "URL of a test.guide instance"
                        },
                        "example": "https://test.guide.com",
                        "name": "testGuideUrl",
                        "in": "query"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "additionalProperties": {
                                            "type": "string"
                                        },
                                        "type": "object"
                                    },
                                    "type": "array",
                                    "title": "Response Get Testguide Projects Api Testguide Projects Get"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The user is unauthorized."
                    },
                    "404": {
                        "description": "No test.guide projects in test.guide instance available."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/testguide/listFolder": {
            "get": {
                "tags": [
                    "testguide"
                ],
                "summary": "Get Folder Content",
                "operationId": "get_folder_content",
                "parameters": [
                    {
                        "description": "Url of the test.guide instance",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideurl",
                            "description": "Url of the test.guide instance"
                        },
                        "name": "testGuideUrl",
                        "in": "query"
                    },
                    {
                        "description": "Id of the test.guide project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideprojectid",
                            "description": "Id of the test.guide project"
                        },
                        "name": "testGuideProjectId",
                        "in": "query"
                    },
                    {
                        "description": "Authentication key of the test.guide server application",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideauthkey",
                            "description": "Authentication key of the test.guide server application"
                        },
                        "name": "testGuideAuthKey",
                        "in": "query"
                    },
                    {
                        "description": "Path to the folder which should be analyzed.",
                        "required": false,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "title": "Folders",
                            "description": "Path to the folder which should be analyzed."
                        },
                        "example": [
                            "folder1",
                            "folder1_2"
                        ],
                        "name": "folders",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Folder content has been detected succesfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FolderContent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Slug not configured or folder to list not found."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/fea/create": {
            "post": {
                "tags": [
                    "fea"
                ],
                "summary": "Create Fea",
                "description": "This function create a Fea file with the entered name",
                "operationId": "create_fea",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Fea Name"
                        },
                        "name": "fea_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A new Fea was successfully created",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                },
                                "example": "feaName.t42"
                            }
                        }
                    },
                    "201": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/tom/settings": {
            "put": {
                "tags": [
                    "settings"
                ],
                "summary": "Update Settings",
                "description": "Reload configured settings and perform validation checks.",
                "operationId": "update_settings",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict in settings file"
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/tom/settings/attributes": {
            "get": {
                "tags": [
                    "settings"
                ],
                "summary": "Get Testorder Attributes",
                "description": "Get test order settings for the **TestFactory** project",
                "operationId": "get_testorder_attributes",
                "parameters": [
                    {
                        "description": "Url of the test.guide instance",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideurl",
                            "description": "Url of the test.guide instance"
                        },
                        "name": "testGuideUrl",
                        "in": "query"
                    },
                    {
                        "description": "Id of the test.guide project",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testguideprojectid",
                            "description": "Id of the test.guide project"
                        },
                        "name": "testGuideProjectId",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_get_testorder_attributes_api_tom_settings_attributes_get"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/AttributeSetting"
                                    },
                                    "type": "array",
                                    "title": "Response Get Testorder Attributes Api Tom Settings Attributes Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/{slug}/tom/settings/attributes": {
            "get": {
                "tags": [
                    "settings"
                ],
                "summary": "Get Testorder Attributes Multi",
                "description": "Get test order settings for the **TestFactory** project",
                "operationId": "get_testorder_attributes_multi",
                "parameters": [
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/profiling/": {
            "get": {
                "tags": [
                    "profiling"
                ],
                "summary": "Get Profiling",
                "description": "Get the profiled endpoints as zip. snakeViz can for example be used to analyze the .prof files.\nAfter downloading the current profiles profiling is deactivated and the profiles will be deleted\non the server.",
                "operationId": "get_profiling",
                "responses": {
                    "200": {
                        "description": "Profiles downlaoded as zip",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/zip": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                },
                                "example": "profiles.zip"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "profiling"
                ],
                "summary": "Activate Profiling",
                "description": "Activate profiling for specified endpoints. Endpoints can be defined by a regex wich matches\nthe endpoints which should be profiled. Can be used multiple times to add multiple regex.",
                "operationId": "activate_profiling",
                "parameters": [
                    {
                        "description": "Regex for endpoints to profile",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Endpointregex",
                            "description": "Regex for endpoints to profile"
                        },
                        "example": "tomtest.*testorders",
                        "name": "endpointRegex",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/{slug}/codebeamer/baselines": {
            "get": {
                "tags": [
                    "codebeamer"
                ],
                "summary": "Get Baselines",
                "operationId": "get_baselines",
                "parameters": [
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "description": "Codebeamer Project id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Projectid",
                            "description": "Codebeamer Project id"
                        },
                        "name": "projectId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CodeBeamerBaseline"
                                    },
                                    "type": "array",
                                    "title": "Response Get Baselines Api  Slug  Codebeamer Baselines Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/{slug}/codebeamer/projects": {
            "get": {
                "tags": [
                    "codebeamer"
                ],
                "summary": "Get Projects",
                "operationId": "get_projects",
                "parameters": [
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CodeBeamerBaseline"
                                    },
                                    "type": "array",
                                    "title": "Response Get Projects Api  Slug  Codebeamer Projects Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/{slug}/codebeamer/testsetTrackers": {
            "get": {
                "tags": [
                    "codebeamer"
                ],
                "summary": "Get Testset Trackers",
                "operationId": "get_testset_trackers",
                "parameters": [
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "description": "Codebeamer Project id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Projectid",
                            "description": "Codebeamer Project id"
                        },
                        "name": "projectId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CodeBeamerBaseline"
                                    },
                                    "type": "array",
                                    "title": "Response Get Testset Trackers Api  Slug  Codebeamer Testsettrackers Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/{slug}/codebeamer/testcaseTrackers": {
            "get": {
                "tags": [
                    "codebeamer"
                ],
                "summary": "Get Testcase Trackers",
                "operationId": "get_testcase_trackers",
                "parameters": [
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "description": "Codebeamer Project id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Projectid",
                            "description": "Codebeamer Project id"
                        },
                        "name": "projectId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CodeBeamerBaseline"
                                    },
                                    "type": "array",
                                    "title": "Response Get Testcase Trackers Api  Slug  Codebeamer Testcasetrackers Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/{slug}/codebeamer/testsets": {
            "get": {
                "tags": [
                    "codebeamer"
                ],
                "summary": "Get Testsets",
                "operationId": "get_testsets",
                "parameters": [
                    {
                        "description": "The project slug of the **TestFactory** project.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[0-9a-zA-Z_]+$",
                            "title": "Slug",
                            "description": "The project slug of the **TestFactory** project."
                        },
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "description": "Codebeamer Testset Tracker id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Trackerid",
                            "description": "Codebeamer Testset Tracker id"
                        },
                        "name": "trackerId",
                        "in": "query"
                    },
                    {
                        "description": "Optional Codebeamer Baseline id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Baselineid",
                            "description": "Optional Codebeamer Baseline id"
                        },
                        "name": "baselineId",
                        "in": "query"
                    },
                    {
                        "description": "Codebeamer Project id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Projectid",
                            "description": "Codebeamer Project id"
                        },
                        "name": "projectId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CodeBeamerBaseline"
                                    },
                                    "type": "array",
                                    "title": "Response Get Testsets Api  Slug  Codebeamer Testsets Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/info/version": {
            "get": {
                "tags": [
                    "info"
                ],
                "summary": "Get Version",
                "description": "Get the used version of TOM.",
                "operationId": "get_version",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        },
        "/api/info/description": {
            "get": {
                "tags": [
                    "info"
                ],
                "summary": "Get Description",
                "description": "Get the Tool description of TOM.",
                "operationId": "get_description",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Description"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ArtifactAttribute": {
                "properties": {
                    "key": {
                        "type": "string",
                        "title": "Key"
                    },
                    "values": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Values"
                    }
                },
                "type": "object",
                "required": [
                    "key",
                    "values"
                ],
                "title": "ArtifactAttribute",
                "description": "Attribute of an artifact that may have multiple values."
            },
            "ArtifactComponent": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "fileName": {
                        "type": "string",
                        "title": "Filename"
                    },
                    "extension": {
                        "type": "string",
                        "title": "Extension"
                    },
                    "fileSize": {
                        "type": "integer",
                        "title": "Filesize"
                    },
                    "hash": {
                        "type": "string",
                        "title": "Hash"
                    },
                    "uploadDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Uploaddate"
                    },
                    "uploader": {
                        "type": "string",
                        "title": "Uploader"
                    },
                    "attributeList": {
                        "items": {
                            "$ref": "#/components/schemas/ArtifactAttribute"
                        },
                        "type": "array",
                        "title": "Attributelist"
                    },
                    "shares": {
                        "items": {
                            "$ref": "#/components/schemas/ArtifactShare"
                        },
                        "type": "array",
                        "title": "Shares"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "fileName",
                    "extension",
                    "fileSize",
                    "hash",
                    "uploadDate",
                    "uploader",
                    "attributeList",
                    "shares"
                ],
                "title": "ArtifactComponent"
            },
            "ArtifactIdResponse": {
                "properties": {
                    "artifactId": {
                        "type": "string",
                        "title": "Artifactid"
                    }
                },
                "type": "object",
                "required": [
                    "artifactId"
                ],
                "title": "ArtifactIdResponse"
            },
            "ArtifactShare": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "link": {
                        "type": "string",
                        "title": "Link"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "creator": {
                        "type": "string",
                        "title": "Creator"
                    },
                    "createDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Createdate"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "link",
                    "description",
                    "creator",
                    "createDate"
                ],
                "title": "ArtifactShare"
            },
            "AttributeSetting": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of attribute"
                    },
                    "required": {
                        "type": "boolean",
                        "title": "Required",
                        "description": "Required attribute when creating a new test order"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "string",
                            "number",
                            "enum"
                        ],
                        "title": "Type",
                        "description": "string: Attribute value can be any string\nnumber: Attribute value can be a float value\nenum: Attribute value can be a choice of strings defined in the range parameter\n"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "A short summary of the attribute"
                    },
                    "example": {
                        "type": "string",
                        "title": "Example",
                        "description": "A example value of the attribute"
                    },
                    "range": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "number"
                                },
                                "type": "array"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        ],
                        "title": "Range",
                        "description": "If type string: Regex expression to check if value matches a cetrain pattern\nIf number: List of two floats to set upper and lower limit\nIf enum: List of strings to define possible values\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "required",
                    "type"
                ],
                "title": "AttributeSetting"
            },
            "Body_add_test_suite_from_file_multi_api__slug__testOrders__testOrderId__testSuite_fea_post": {
                "properties": {
                    "inputFile": {
                        "type": "string",
                        "format": "binary",
                        "title": "Inputfile",
                        "description": "File describing the test suite. For now only t42 files are supported."
                    }
                },
                "type": "object",
                "required": [
                    "inputFile"
                ],
                "title": "Body_add_test_suite_from_file_multi_api__slug__testOrders__testOrderId__testSuite_fea_post"
            },
            "Body_create_test_order_from_file_api_testOrders_createFromFile_post": {
                "properties": {
                    "testGuideUrl": {
                        "type": "string",
                        "title": "Testguideurl",
                        "description": "Url of the test.guide instance"
                    },
                    "testGuideProjectId": {
                        "type": "string",
                        "title": "Testguideprojectid",
                        "description": "Id of the test.guide project"
                    },
                    "testGuideAuthKey": {
                        "type": "string",
                        "title": "Testguideauthkey",
                        "description": "Authentication key of the test.guide server application"
                    },
                    "path": {
                        "type": "string",
                        "title": "Path",
                        "description": "Deprecated path parameter to specify the path to the testorder. Please use the parameters pathList and name.",
                        "default": ""
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Startdate",
                        "description": "Start date of the test.guide release"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Enddate",
                        "description": "Release date of the test.guide release"
                    },
                    "testbenchName": {
                        "type": "string",
                        "title": "Testbenchname",
                        "description": "Testbench name"
                    },
                    "testOrderParameters": {
                        "type": "string",
                        "title": "Testorderparameters",
                        "description": "Additional information to a test order. e.g. {\"attributes\": {\"key1\": \"value1\"}}",
                        "default": ""
                    },
                    "inputFile": {
                        "type": "string",
                        "format": "binary",
                        "title": "Inputfile",
                        "description": "File describing the test suite. For now only t42 files are supported."
                    }
                },
                "type": "object",
                "required": [
                    "testGuideUrl",
                    "testGuideProjectId",
                    "testGuideAuthKey",
                    "startDate",
                    "endDate",
                    "testbenchName",
                    "inputFile"
                ],
                "title": "Body_create_test_order_from_file_api_testOrders_createFromFile_post"
            },
            "Body_create_test_order_from_file_multi_api__slug__testOrders_createFromFile_post": {
                "properties": {
                    "testGuideAuthKey": {
                        "type": "string",
                        "title": "Testguideauthkey",
                        "description": "Authentication key of the test.guide server application"
                    },
                    "path": {
                        "type": "string",
                        "title": "Path",
                        "description": "Deprecated path parameter to specify the path to the testorder. Please use the parameters pathList and name.",
                        "default": ""
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Startdate",
                        "description": "Start date of the test.guide release"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Enddate",
                        "description": "Release date of the test.guide release"
                    },
                    "testbenchName": {
                        "type": "string",
                        "title": "Testbenchname",
                        "description": "Testbench name"
                    },
                    "testOrderParameters": {
                        "type": "string",
                        "title": "Testorderparameters",
                        "description": "Additional information to a test order. e.g. {\"attributes\": {\"key1\": \"value1\"}}",
                        "default": ""
                    },
                    "inputFile": {
                        "type": "string",
                        "format": "binary",
                        "title": "Inputfile",
                        "description": "File describing the test suite. For now only t42 files are supported."
                    }
                },
                "type": "object",
                "required": [
                    "testGuideAuthKey",
                    "startDate",
                    "endDate",
                    "testbenchName",
                    "inputFile"
                ],
                "title": "Body_create_test_order_from_file_multi_api__slug__testOrders_createFromFile_post"
            },
            "Body_get_testorder_attributes_api_tom_settings_attributes_get": {
                "properties": {
                    "testGuideUrl": {
                        "type": "string",
                        "title": "Testguideurl",
                        "description": "Url of the test.guide instance"
                    },
                    "testGuideProjectId": {
                        "type": "string",
                        "title": "Testguideprojectid",
                        "description": "Id of the test.guide project"
                    }
                },
                "type": "object",
                "required": [
                    "testGuideUrl",
                    "testGuideProjectId"
                ],
                "title": "Body_get_testorder_attributes_api_tom_settings_attributes_get"
            },
            "Body_import_from_test_guide_api_testOrders_importFromTestGuide_put": {
                "properties": {
                    "testGuideUrl": {
                        "type": "string",
                        "title": "Testguideurl",
                        "description": "Url of the test.guide instance"
                    },
                    "testGuideProjectId": {
                        "type": "string",
                        "title": "Testguideprojectid",
                        "description": "Id of the test.guide project"
                    },
                    "testGuideAuthKey": {
                        "type": "string",
                        "title": "Testguideauthkey",
                        "description": "Authentication key of the test.guide server application"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Startdate",
                        "description": "Start date of the test.guide release"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Enddate",
                        "description": "Release date of the test.guide release"
                    },
                    "testbenchName": {
                        "type": "string",
                        "title": "Testbenchname",
                        "description": "Testbench name"
                    },
                    "testOrderParameters": {
                        "type": "string",
                        "title": "Testorderparameters",
                        "description": "Additional information to a test order. e.g. {\"attributes\": {\"key1\": \"value1\"}}",
                        "default": ""
                    },
                    "releaseId": {
                        "type": "integer",
                        "title": "Releaseid",
                        "description": "ID of the test.guide release (see into test.guide release details)."
                    },
                    "copyRelease": {
                        "type": "boolean",
                        "title": "Copyrelease",
                        "description": "Allows to create a copy of the given release. If True please provide a name and pathList.",
                        "default": false
                    },
                    "path": {
                        "type": "string",
                        "title": "Path",
                        "description": "Deprecated path parameter to specify the path to the testorder. Please use the parameters pathList and name.",
                        "default": ""
                    }
                },
                "type": "object",
                "required": [
                    "testGuideUrl",
                    "testGuideProjectId",
                    "testGuideAuthKey",
                    "startDate",
                    "endDate",
                    "testbenchName",
                    "releaseId"
                ],
                "title": "Body_import_from_test_guide_api_testOrders_importFromTestGuide_put"
            },
            "Body_import_from_test_guide_multi_api__slug__testOrders_importFromTestGuide_put": {
                "properties": {
                    "testGuideAuthKey": {
                        "type": "string",
                        "title": "Testguideauthkey",
                        "description": "Authentication key of the test.guide server application"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Startdate",
                        "description": "Start date of the test.guide release"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Enddate",
                        "description": "Release date of the test.guide release"
                    },
                    "testbenchName": {
                        "type": "string",
                        "title": "Testbenchname",
                        "description": "Testbench name"
                    },
                    "testOrderParameters": {
                        "type": "string",
                        "title": "Testorderparameters",
                        "description": "Additional information to a test order. e.g. {\"attributes\": {\"key1\": \"value1\"}}",
                        "default": ""
                    },
                    "releaseId": {
                        "type": "integer",
                        "title": "Releaseid",
                        "description": "ID of the test.guide release (see into test.guide release details)."
                    },
                    "copyRelease": {
                        "type": "boolean",
                        "title": "Copyrelease",
                        "description": "Allows to create a copy of the given release. If True please provide a name and pathList.",
                        "default": false
                    },
                    "path": {
                        "type": "string",
                        "title": "Path",
                        "description": "Deprecated path parameter to specify the path to the testorder. Please use the parameters pathList and name.",
                        "default": ""
                    }
                },
                "type": "object",
                "required": [
                    "testGuideAuthKey",
                    "startDate",
                    "endDate",
                    "testbenchName",
                    "releaseId"
                ],
                "title": "Body_import_from_test_guide_multi_api__slug__testOrders_importFromTestGuide_put"
            },
            "Body_upload_attachment_api_testOrders__testOrderId__attachment__purpose__post": {
                "properties": {
                    "inputFile": {
                        "type": "string",
                        "format": "binary",
                        "title": "Inputfile",
                        "description": "File to be attached to the test order."
                    }
                },
                "type": "object",
                "required": [
                    "inputFile"
                ],
                "title": "Body_upload_attachment_api_testOrders__testOrderId__attachment__purpose__post"
            },
            "Body_upload_attachment_multi_api__slug__testOrders__testOrderId__attachment__purpose__post": {
                "properties": {
                    "inputFile": {
                        "type": "string",
                        "format": "binary",
                        "title": "Inputfile",
                        "description": "File to be attached to the test order."
                    }
                },
                "type": "object",
                "required": [
                    "inputFile"
                ],
                "title": "Body_upload_attachment_multi_api__slug__testOrders__testOrderId__attachment__purpose__post"
            },
            "CodeBeamerBaseline": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "title": "CodeBeamerBaseline"
            },
            "Description": {
                "properties": {
                    "description": {
                        "type": "string",
                        "title": "Description"
                    }
                },
                "type": "object",
                "required": [
                    "description"
                ],
                "title": "Description"
            },
            "FolderContent": {
                "properties": {
                    "folders": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Folders",
                        "description": "List of folders",
                        "example": [
                            "folder1",
                            "folder2"
                        ]
                    },
                    "testorders": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Testorders",
                        "description": "List of testorders",
                        "example": [
                            "testorder1",
                            "testorder2"
                        ]
                    }
                },
                "type": "object",
                "required": [
                    "folders",
                    "testorders"
                ],
                "title": "FolderContent"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "Step": {
                "properties": {
                    "actions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Actions"
                    },
                    "expectations": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Expectations"
                    }
                },
                "type": "object",
                "required": [
                    "actions",
                    "expectations"
                ],
                "title": "Step",
                "description": "Step with actions and expectations. Part of a test case."
            },
            "SubTestSuite": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "TestSuite name",
                        "example": "Door_Tests"
                    },
                    "properties": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Properties",
                        "description": "Properties"
                    },
                    "testSuites": {
                        "items": {
                            "$ref": "#/components/schemas/SubTestSuite"
                        },
                        "type": "array",
                        "title": "Testsuites",
                        "description": "List of child TestSuites"
                    },
                    "testCases": {
                        "items": {
                            "$ref": "#/components/schemas/TestCase"
                        },
                        "type": "array",
                        "title": "Testcases",
                        "description": "TestCases within this TestSuite"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "properties",
                    "testSuites",
                    "testCases"
                ],
                "title": "SubTestSuite",
                "description": "Element to sturcture a test suite. Like a Folder in an ecu.test project"
            },
            "TestCase": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Testcase name",
                        "example": "Test_Driver_Door_open"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Unique Testcase ID",
                        "example": "42"
                    },
                    "version": {
                        "type": "string",
                        "title": "Version",
                        "description": "Version",
                        "example": "2"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "Description",
                        "example": "This is a test case"
                    },
                    "preconditions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Preconditions",
                        "description": "List of preconditions"
                    },
                    "steps": {
                        "items": {
                            "$ref": "#/components/schemas/Step"
                        },
                        "type": "array",
                        "title": "Steps",
                        "description": "List of steps"
                    },
                    "postconditions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Postconditions",
                        "description": "List of postconditions"
                    },
                    "properties": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Properties",
                        "description": "Properties"
                    },
                    "ecus": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Ecus",
                        "description": "Causing eucs for the test case"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "version",
                    "description",
                    "preconditions",
                    "steps",
                    "postconditions",
                    "properties"
                ],
                "title": "TestCase"
            },
            "TestOrder": {
                "properties": {
                    "testOrderId": {
                        "type": "integer",
                        "title": "Testorderid",
                        "description": "Unique id of a test order",
                        "example": 127
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the test order. ",
                        "example": "G21"
                    },
                    "folderList": {
                        "items": {},
                        "type": "array",
                        "title": "Folderlist",
                        "description": "List of folders to the Testorder.",
                        "example": [
                            "VR50",
                            "CL2",
                            "G21"
                        ]
                    },
                    "path": {
                        "type": "string",
                        "title": "Path",
                        "description": "Path for the test order. It will be used as path for the test.guide release.",
                        "example": "VR50/CL2/G21"
                    },
                    "creationDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creationdate",
                        "description": "Creation date of the test.guide release",
                        "example": "2024-11-10T08:00+02:00"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Startdate",
                        "description": "Start date of the test.guide release",
                        "example": "2024-11-10T08:00+02:00"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Enddate",
                        "description": "Release date of the test.guide release",
                        "example": "2024-11-10T18:00+02:00"
                    },
                    "testbenchName": {
                        "type": "string",
                        "title": "Testbenchname",
                        "description": "Testbench name",
                        "example": "A-10"
                    },
                    "state": {
                        "type": "string",
                        "enum": [
                            "CREATED",
                            "ACTIVE",
                            "DONE",
                            "FINISHED"
                        ],
                        "title": "State",
                        "description": "CREATED: current time/date is before startDate.\nACTIVE: current date/time is between startDate and endDate.\nDONE: current date/time is after endDate\nFINISHED: test.guide release is locked and results are exported."
                    },
                    "progress": {
                        "type": "number",
                        "maximum": 100,
                        "minimum": 0,
                        "title": "Progress",
                        "description": "Progress in percent",
                        "example": 12.5
                    },
                    "releaseUrl": {
                        "type": "string",
                        "title": "Releaseurl",
                        "description": "URL to the test.guide release."
                    },
                    "attachmentPurposes": {
                        "items": {},
                        "type": "array",
                        "title": "Attachmentpurposes",
                        "description": "Attachment purposes of the test order.",
                        "default": []
                    },
                    "codebeamerBaseline": {
                        "type": "integer",
                        "title": "Codebeamerbaseline",
                        "description": "Codebeamer Baseline"
                    },
                    "cbql": {
                        "type": "string",
                        "title": "Cbql",
                        "description": "customized cbql string serves as codebeamer testcase filter",
                        "example": "project.id=000 AND tracker.id=0000 AND item.id=000"
                    },
                    "attributes": {
                        "type": "object",
                        "title": "Attributes",
                        "description": "Additional attributes of a testorder.",
                        "default": {}
                    },
                    "test_suite": {
                        "$ref": "#/components/schemas/TestSuite"
                    }
                },
                "type": "object",
                "required": [
                    "testOrderId",
                    "path",
                    "creationDate",
                    "startDate",
                    "endDate",
                    "testbenchName",
                    "state",
                    "releaseUrl"
                ],
                "title": "TestOrder"
            },
            "TestOrderInfo": {
                "properties": {
                    "testOrderId": {
                        "type": "integer",
                        "title": "Testorderid",
                        "description": "Unique id of a test order",
                        "example": 127
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name of the test order. ",
                        "example": "G21"
                    },
                    "folderList": {
                        "items": {},
                        "type": "array",
                        "title": "Folderlist",
                        "description": "List of folders to the Testorder.",
                        "example": [
                            "VR50",
                            "CL2",
                            "G21"
                        ]
                    },
                    "path": {
                        "type": "string",
                        "title": "Path",
                        "description": "Path for the test order. It will be used as path for the test.guide release.",
                        "example": "VR50/CL2/G21"
                    },
                    "creationDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Creationdate",
                        "description": "Creation date of the test.guide release",
                        "example": "2024-11-10T08:00+02:00"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Startdate",
                        "description": "Start date of the test.guide release",
                        "example": "2024-11-10T08:00+02:00"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Enddate",
                        "description": "Release date of the test.guide release",
                        "example": "2024-11-10T18:00+02:00"
                    },
                    "testbenchName": {
                        "type": "string",
                        "title": "Testbenchname",
                        "description": "Testbench name",
                        "example": "A-10"
                    },
                    "state": {
                        "type": "string",
                        "enum": [
                            "CREATED",
                            "ACTIVE",
                            "DONE",
                            "FINISHED"
                        ],
                        "title": "State",
                        "description": "CREATED: current time/date is before startDate.\nACTIVE: current date/time is between startDate and endDate.\nDONE: current date/time is after endDate\nFINISHED: test.guide release is locked and results are exported."
                    },
                    "progress": {
                        "type": "number",
                        "maximum": 100,
                        "minimum": 0,
                        "title": "Progress",
                        "description": "Progress in percent",
                        "example": 12.5
                    },
                    "releaseUrl": {
                        "type": "string",
                        "title": "Releaseurl",
                        "description": "URL to the test.guide release."
                    },
                    "attachmentPurposes": {
                        "items": {},
                        "type": "array",
                        "title": "Attachmentpurposes",
                        "description": "Attachment purposes of the test order.",
                        "default": []
                    },
                    "codebeamerBaseline": {
                        "type": "integer",
                        "title": "Codebeamerbaseline",
                        "description": "Codebeamer Baseline"
                    },
                    "cbql": {
                        "type": "string",
                        "title": "Cbql",
                        "description": "customized cbql string serves as codebeamer testcase filter",
                        "example": "project.id=000 AND tracker.id=0000 AND item.id=000"
                    },
                    "attributes": {
                        "type": "object",
                        "title": "Attributes",
                        "description": "Additional attributes of a testorder.",
                        "default": {}
                    }
                },
                "type": "object",
                "required": [
                    "testOrderId",
                    "path",
                    "creationDate",
                    "startDate",
                    "endDate",
                    "testbenchName",
                    "state",
                    "releaseUrl"
                ],
                "title": "TestOrderInfo"
            },
            "TestOrderParameters": {
                "properties": {
                    "attributes": {
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "object",
                        "title": "Attributes"
                    }
                },
                "type": "object",
                "title": "TestOrderParameters"
            },
            "TestSuite": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "TestSuite name",
                        "example": "Door_Tests"
                    },
                    "properties": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Properties",
                        "description": "Properties"
                    },
                    "testSuites": {
                        "items": {
                            "$ref": "#/components/schemas/SubTestSuite"
                        },
                        "type": "array",
                        "title": "Testsuites",
                        "description": "List of child TestSuites"
                    },
                    "testCases": {
                        "items": {
                            "$ref": "#/components/schemas/TestCase"
                        },
                        "type": "array",
                        "title": "Testcases",
                        "description": "TestCases within this TestSuite"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Unique TestSuite ID",
                        "example": "42"
                    },
                    "testsuite_id_report": {
                        "type": "string",
                        "title": "Testsuite Id Report",
                        "description": "Name of global constant for the Testsuite Id within a testreport",
                        "default": "TT_TESTSUITE_ID",
                        "example": "TT_TESTSUITE_ID"
                    },
                    "testcase_id_report": {
                        "type": "string",
                        "title": "Testcase Id Report",
                        "description": "Name of global constant for the Testcase Id within a testreport",
                        "default": "TT_TESTCASE_ID",
                        "example": "TT_TESTCASE_ID"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "properties",
                    "testSuites",
                    "testCases"
                ],
                "title": "TestSuite",
                "description": "Element to sturcture a test suite. Like a Folder in an ecu.test project"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        },
        "securitySchemes": {
            "OAuth2": {
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "scopes": {},
                        "authorizationUrl": "https://iam.testfactory-dev.company.com/realms/testfactory/protocol/openid-connect/auth"
                    },
                    "authorizationCode": {
                        "scopes": {},
                        "authorizationUrl": "https://iam.testfactory-dev.company.com/realms/testfactory/protocol/openid-connect/auth",
                        "tokenUrl": "https://iam.testfactory-dev.company.com/realms/testfactory/protocol/openid-connect/token"
                    }
                }
            }
        }
    }
}
